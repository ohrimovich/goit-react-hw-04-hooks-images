{"version":3,"sources":["components/Saerchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/PixabayAPI.js","components/ImageGallaryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/feachImage/FeachImage.js","App.js","index.js"],"names":["Searchbar","onChange","useState","imageName","setImageName","className","onSubmit","event","preventDefault","trim","toast","error","type","autoComplete","value","autoFocus","placeholder","currentTarget","toLowerCase","ImageGallery","children","Button","onLoadMore","onClick","api","fetchImage","name","page","fetch","then","res","json","ImageGalleryItem","list","click","largeImageURL","target","dataset","url","largeImageAlt","alt","map","item","src","webformatURL","tags","id","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","FeachImage","images","setImages","isVisible","setIsVisible","loading","setLoading","setPage","showModal","setShowModal","largeImage","setLargeImage","setAlt","scrollTo","top","documentElement","scrollHeight","behavior","PixabayAPI","hits","length","clearList","prevPage","setState","catch","console","log","finally","toggleModal","prevImages","color","height","width","timeout","App","image","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e5b5b6c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Searchbar.scss'\r\nimport { toast } from 'react-toastify'\r\n\r\nfunction Searchbar({onChange}) {\r\n    \r\n    const [imageName, setImageName] = useState('');\r\n \r\n\r\n    const handlerNameChange = event => {\r\n       \r\n            setImageName(event.currentTarget.value.toLowerCase())\r\n    }\r\n\r\n    const handlerSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (imageName.trim() === '') {\r\n            toast.error('Enter name of image, what would you like to find');\r\n            return;\r\n\r\n        }\r\n\r\n        onChange(imageName);\r\n        setImageName('');\r\n\r\n    }\r\n\r\n        return(\r\n        <header className=\"Searchbar\">\r\n            <form onSubmit={handlerSubmit} className=\"SearchForm\">\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    value = {imageName}\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={handlerNameChange}\r\n                />\r\n            </form>\r\n        </header>\r\n        )\r\n}\r\n\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport './ImageGallery.scss'\r\n\r\nfunction ImageGallery({children}) {\r\n    \r\n        return (\r\n            <ul className=\"ImageGallery\" >\r\n                {children}\r\n            </ul>\r\n        )\r\n}\r\n\r\nexport default ImageGallery;","import './Button.scss'\r\n\r\nfunction Button({onLoadMore}) {\r\n    return (\r\n        <button type='button' className=\"Button\" onClick={onLoadMore} >Load more</button>    \r\n    )\r\n}\r\n\r\nexport default Button;","function fetchImage(name, page = 1 ) {\r\n    return (\r\n         fetch(`https://pixabay.com/api/?q=${name}&page=${page}&key=23101905-f5de468dd217ea275d2e77ee2&image_type=photo&orientation=horizontal&per_page=12`)\r\n                .then(res => res.json())\r\n    )\r\n}\r\n\r\nconst api = {\r\n    fetchImage,\r\n}\r\n\r\nexport default api;","import './ImageGalleryItem.scss'\r\nimport React from 'react';\r\n\r\nfunction  ImageGalleryItem ({onClick, list}) {\r\n    \r\n   const click = (event) => {\r\n        const largeImageURL = event.target.dataset.url;\r\n        const largeImageAlt = event.target.dataset.alt;\r\n        onClick(largeImageURL, largeImageAlt);\r\n    }\r\n\r\n        return (\r\n            list.map(item => <li key={item.id} onClick={click} className=\"ImageGalleryItem\">\r\n                <img src={item.webformatURL} alt={item.tags} data-alt={item.tags} data-url={item.largeImageURL} className=\"ImageGalleryItem-image\" />\r\n            </li>)\r\n        )\r\n    }\r\n\r\nexport default ImageGalleryItem;","import React, { useEffect} from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss'\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\n\r\nexport default function Modal({ onClick, largeImageURL, alt }) {\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown)\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown)\r\n        }\r\n    })\r\n\r\n    const handleKeyDown = e => {\r\n            if (e.code === 'Escape') {\r\n                onClick();\r\n            }\r\n        }\r\n\r\n    const click = (e) => {\r\n        if (e.currentTarget === e.target) {\r\n            onClick();\r\n    }\r\n}\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={click}>\r\n                <div className=\"Modal\">\r\n                    <img src={largeImageURL} alt={alt} />\r\n                </div>\r\n            </div>, modalRoot\r\n        )\r\n    }","import React, { useState, useEffect } from \"react\";\r\nimport ImageGallery from '../ImageGallery/ImageGallery'\r\nimport Button from \"../Button/Button\";\r\nimport { toast } from 'react-toastify';\r\nimport PixabayAPI from \"../../services/PixabayAPI\";\r\nimport ImageGalleryItem from \"../ImageGallaryItem/ImageGalleryItem\";\r\nimport Modal from '../Modal/Modal';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './FetchImage.scss'\r\n\r\n\r\nfunction FeachImage({name}) {\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [largeImage, setLargeImage] = useState('');\r\n    const [alt, setAlt] = useState('');\r\n\r\n      window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n                });\r\n\r\n    const setState = (res) => {\r\n        setImages(res);\r\n        setIsVisible(true);\r\n        setPage(prevPage => prevPage + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!name) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        PixabayAPI.fetchImage(name)\r\n            .then(res => res.hits.length === 0 ? clearList() :\r\n                setState(res.hits))\r\n            .catch(error => console.log(error)).finally(() => setLoading(false))\r\n    }, [name])\r\n\r\n     const toggleModal = (largeImageURL='',largeImageAlt='') => {\r\n         setShowModal(!showModal);\r\n         setLargeImage(largeImageURL);\r\n         setAlt(largeImageAlt);\r\n  }\r\n\r\n    const clearList = () => {\r\n       \r\n        setImages([]);\r\n        setIsVisible(false);\r\n        toast.error('Nothing not found')\r\n        return;\r\n    }\r\n    \r\n    const onLoadMore = () => {\r\n        setIsVisible(false);\r\n        setLoading(true);\r\n        PixabayAPI.fetchImage(name, page)\r\n            .then(res => {\r\n                setImages(prevImages => [\r\n                    ...prevImages, ...res.hits\r\n                ]);\r\n                setPage(page + 1);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsVisible(true);\r\n            })\r\n          \r\n    }\r\n\r\n        return (\r\n            <>\r\n                <ImageGallery >\r\n                    <ImageGalleryItem list={images} onClick={toggleModal}/>\r\n              </ImageGallery>\r\n                {isVisible && <Button onLoadMore={onLoadMore} />}\r\n                {showModal && <Modal largeImageURL={largeImage} alt={alt} onClick={toggleModal} />}\r\n                {loading && <div className='Spinner'><Loader type=\"TailSpin\"\r\n                    color=\"#00BFFF\"\r\n                    height={50}\r\n                    width={50}\r\n                    timeout={20000}\r\n                    /></div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default FeachImage;","import \"./App.css\";\nimport React, { useState} from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from \"./components/Saerchbar/Searchbar\";\nimport FeachImage from \"./components/feachImage/FeachImage\";\n\n\nfunction  App() {\n\n  const [imageName, setImageName] = useState('');\n\n  const formSubmit = image => {\n    setImageName(image)\n  }\n\n    return (\n      \n      <>\n        <Searchbar onChange={formSubmit} />\n        <ToastContainer autoClose={3000} />\n        <FeachImage name={imageName}  />\n\n      </>\n    ) \n  };\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}